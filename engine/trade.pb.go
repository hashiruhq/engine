// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trade.proto

package engine

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Trade struct {
	Price                uint64     `protobuf:"varint,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Amount               uint64     `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	AskID                uint64     `protobuf:"varint,3,opt,name=AskID,proto3" json:"AskID,omitempty"`
	AskOwnerID           uint64     `protobuf:"varint,4,opt,name=AskOwnerID,proto3" json:"AskOwnerID,omitempty"`
	BidID                uint64     `protobuf:"varint,5,opt,name=BidID,proto3" json:"BidID,omitempty"`
	BidOwnerID           uint64     `protobuf:"varint,6,opt,name=BidOwnerID,proto3" json:"BidOwnerID,omitempty"`
	MakerSide            MarketSide `protobuf:"varint,7,opt,name=MakerSide,proto3,enum=engine.MarketSide" json:"MakerSide,omitempty"`
	Market               string     `protobuf:"bytes,8,opt,name=Market,proto3" json:"Market,omitempty"`
	CreatedAt            int64      `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{0}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Trade) GetAskID() uint64 {
	if m != nil {
		return m.AskID
	}
	return 0
}

func (m *Trade) GetAskOwnerID() uint64 {
	if m != nil {
		return m.AskOwnerID
	}
	return 0
}

func (m *Trade) GetBidID() uint64 {
	if m != nil {
		return m.BidID
	}
	return 0
}

func (m *Trade) GetBidOwnerID() uint64 {
	if m != nil {
		return m.BidOwnerID
	}
	return 0
}

func (m *Trade) GetMakerSide() MarketSide {
	if m != nil {
		return m.MakerSide
	}
	return MarketSide_Buy
}

func (m *Trade) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Trade) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*Trade)(nil), "engine.Trade")
}

func init() { proto.RegisterFile("trade.proto", fileDescriptor_ee944bd90e8a0312) }

var fileDescriptor_ee944bd90e8a0312 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xc9, 0xee, 0xb6, 0xda, 0x59, 0xf0, 0x10, 0x44, 0x06, 0x11, 0x29, 0x9e, 0x7a, 0x2a,
	0xa2, 0x4f, 0x90, 0xb5, 0x97, 0x1e, 0x16, 0x25, 0xfa, 0x02, 0xd1, 0x0c, 0x12, 0x82, 0x89, 0xcc,
	0x46, 0x7c, 0x06, 0xdf, 0x5a, 0x92, 0xac, 0xd4, 0xe3, 0xff, 0xfd, 0xff, 0x07, 0xc9, 0xc0, 0x36,
	0xb1, 0xb1, 0x34, 0x7e, 0x72, 0x4c, 0x51, 0xb6, 0x14, 0xde, 0x5d, 0xa0, 0xcb, 0x6d, 0x64, 0x4b,
	0x5c, 0xe1, 0xcd, 0xcf, 0x0a, 0x9a, 0x97, 0x3c, 0x92, 0xe7, 0xd0, 0x3c, 0xb1, 0x7b, 0x23, 0x14,
	0xbd, 0x18, 0x36, 0xba, 0x06, 0x79, 0x01, 0xad, 0xfa, 0x88, 0x5f, 0x21, 0xe1, 0xaa, 0xe0, 0x63,
	0xca, 0x6b, 0x75, 0xf0, 0xf3, 0x84, 0xeb, 0xba, 0x2e, 0x41, 0x5e, 0x03, 0xa8, 0x83, 0x7f, 0xfc,
	0x0e, 0xc4, 0xf3, 0x84, 0x9b, 0x52, 0xfd, 0x23, 0xd9, 0xda, 0x39, 0x3b, 0x4f, 0xd8, 0x54, 0xab,
	0x84, 0x6c, 0xed, 0x9c, 0xfd, 0xb3, 0xda, 0x6a, 0x2d, 0x44, 0xde, 0x42, 0xb7, 0x37, 0x9e, 0xf8,
	0xd9, 0x59, 0xc2, 0x93, 0x5e, 0x0c, 0x67, 0x77, 0x72, 0xac, 0x9f, 0x19, 0xf7, 0x86, 0x3d, 0xa5,
	0xdc, 0xe8, 0x65, 0x94, 0x5f, 0x5d, 0x0b, 0x3c, 0xed, 0xc5, 0xd0, 0xe9, 0x63, 0x92, 0x57, 0xd0,
	0x3d, 0x30, 0x99, 0x44, 0x56, 0x25, 0xec, 0x7a, 0x31, 0xac, 0xf5, 0x02, 0x5e, 0xdb, 0x72, 0x92,
	0xfb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x28, 0x5a, 0x88, 0x36, 0x01, 0x00, 0x00,
}
