// Code generated by protoc-gen-go. DO NOT EDIT.
// source: market.proto

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MarketBackup struct {
	Topic                string   `protobuf:"bytes,1,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Partition            int32    `protobuf:"varint,2,opt,name=Partition,proto3" json:"Partition,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
	MarketID             string   `protobuf:"bytes,4,opt,name=MarketID,proto3" json:"MarketID,omitempty"`
	PricePrecision       int32    `protobuf:"varint,5,opt,name=PricePrecision,proto3" json:"PricePrecision,omitempty"`
	VolumePrecision      int32    `protobuf:"varint,6,opt,name=VolumePrecision,proto3" json:"VolumePrecision,omitempty"`
	LowestAsk            uint64   `protobuf:"varint,7,opt,name=LowestAsk,proto3" json:"LowestAsk,omitempty"`
	HighestBid           uint64   `protobuf:"varint,8,opt,name=HighestBid,proto3" json:"HighestBid,omitempty"`
	LowestEntryPrice     uint64   `protobuf:"varint,9,opt,name=LowestEntryPrice,proto3" json:"LowestEntryPrice,omitempty"`
	HighestLossPrice     uint64   `protobuf:"varint,10,opt,name=HighestLossPrice,proto3" json:"HighestLossPrice,omitempty"`
	BuyOrders            []*Order `protobuf:"bytes,11,rep,name=BuyOrders,proto3" json:"BuyOrders,omitempty"`
	SellOrders           []*Order `protobuf:"bytes,12,rep,name=SellOrders,proto3" json:"SellOrders,omitempty"`
	BuyMarketEntries     []*Order `protobuf:"bytes,13,rep,name=BuyMarketEntries,proto3" json:"BuyMarketEntries,omitempty"`
	SellMarketEntries    []*Order `protobuf:"bytes,14,rep,name=SellMarketEntries,proto3" json:"SellMarketEntries,omitempty"`
	StopEntryOrders      []*Order `protobuf:"bytes,15,rep,name=StopEntryOrders,proto3" json:"StopEntryOrders,omitempty"`
	StopLossOrders       []*Order `protobuf:"bytes,16,rep,name=StopLossOrders,proto3" json:"StopLossOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketBackup) Reset()         { *m = MarketBackup{} }
func (m *MarketBackup) String() string { return proto.CompactTextString(m) }
func (*MarketBackup) ProtoMessage()    {}
func (*MarketBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_market_adf58f0274b35ea3, []int{0}
}
func (m *MarketBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketBackup.Unmarshal(m, b)
}
func (m *MarketBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketBackup.Marshal(b, m, deterministic)
}
func (dst *MarketBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketBackup.Merge(dst, src)
}
func (m *MarketBackup) XXX_Size() int {
	return xxx_messageInfo_MarketBackup.Size(m)
}
func (m *MarketBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MarketBackup proto.InternalMessageInfo

func (m *MarketBackup) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *MarketBackup) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

func (m *MarketBackup) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MarketBackup) GetMarketID() string {
	if m != nil {
		return m.MarketID
	}
	return ""
}

func (m *MarketBackup) GetPricePrecision() int32 {
	if m != nil {
		return m.PricePrecision
	}
	return 0
}

func (m *MarketBackup) GetVolumePrecision() int32 {
	if m != nil {
		return m.VolumePrecision
	}
	return 0
}

func (m *MarketBackup) GetLowestAsk() uint64 {
	if m != nil {
		return m.LowestAsk
	}
	return 0
}

func (m *MarketBackup) GetHighestBid() uint64 {
	if m != nil {
		return m.HighestBid
	}
	return 0
}

func (m *MarketBackup) GetLowestEntryPrice() uint64 {
	if m != nil {
		return m.LowestEntryPrice
	}
	return 0
}

func (m *MarketBackup) GetHighestLossPrice() uint64 {
	if m != nil {
		return m.HighestLossPrice
	}
	return 0
}

func (m *MarketBackup) GetBuyOrders() []*Order {
	if m != nil {
		return m.BuyOrders
	}
	return nil
}

func (m *MarketBackup) GetSellOrders() []*Order {
	if m != nil {
		return m.SellOrders
	}
	return nil
}

func (m *MarketBackup) GetBuyMarketEntries() []*Order {
	if m != nil {
		return m.BuyMarketEntries
	}
	return nil
}

func (m *MarketBackup) GetSellMarketEntries() []*Order {
	if m != nil {
		return m.SellMarketEntries
	}
	return nil
}

func (m *MarketBackup) GetStopEntryOrders() []*Order {
	if m != nil {
		return m.StopEntryOrders
	}
	return nil
}

func (m *MarketBackup) GetStopLossOrders() []*Order {
	if m != nil {
		return m.StopLossOrders
	}
	return nil
}

func init() {
	proto.RegisterType((*MarketBackup)(nil), "model.MarketBackup")
}

func init() { proto.RegisterFile("market.proto", fileDescriptor_market_adf58f0274b35ea3) }

var fileDescriptor_market_adf58f0274b35ea3 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x51, 0x4b, 0xf3, 0x30,
	0x14, 0x86, 0xe9, 0xb7, 0x75, 0xdf, 0x7a, 0x56, 0xb7, 0x79, 0x10, 0x09, 0x43, 0xa4, 0x78, 0x21,
	0x65, 0xc8, 0x2e, 0x54, 0x44, 0xbc, 0xb3, 0x28, 0x28, 0x4c, 0x36, 0x3a, 0xf1, 0x7e, 0x76, 0x99,
	0x86, 0x75, 0x4b, 0x49, 0x52, 0x64, 0xff, 0xc5, 0x1f, 0x2b, 0x49, 0x8a, 0x9b, 0x6d, 0x2f, 0xf3,
	0x9c, 0xe7, 0x7d, 0x39, 0x9c, 0x16, 0xfc, 0xf5, 0x5c, 0xac, 0xa8, 0x1a, 0x65, 0x82, 0x2b, 0x8e,
	0xee, 0x9a, 0x2f, 0x68, 0x3a, 0xe8, 0x70, 0xb1, 0xa0, 0xc2, 0xb2, 0xb3, 0x6f, 0x17, 0xfc, 0x17,
	0x23, 0x45, 0xf3, 0x64, 0x95, 0x67, 0x78, 0x04, 0xee, 0x2b, 0xcf, 0x58, 0x42, 0x9c, 0xc0, 0x09,
	0xbd, 0xd8, 0x3e, 0xf0, 0x04, 0xbc, 0xe9, 0x5c, 0x28, 0xa6, 0x18, 0xdf, 0x90, 0x7f, 0x81, 0x13,
	0xba, 0xf1, 0x0e, 0xe0, 0x31, 0xb4, 0x26, 0xcb, 0xa5, 0xa4, 0x8a, 0x34, 0x02, 0x27, 0x6c, 0xc4,
	0xc5, 0x0b, 0x07, 0xd0, 0xb6, 0xdd, 0xcf, 0x0f, 0xa4, 0x69, 0xea, 0x7e, 0xdf, 0x78, 0x0e, 0xdd,
	0xa9, 0x60, 0x09, 0x9d, 0x0a, 0x9a, 0x30, 0xa9, 0x6b, 0x5d, 0x53, 0x5b, 0xa2, 0x18, 0x42, 0xef,
	0x8d, 0xa7, 0xf9, 0x7a, 0x4f, 0x6c, 0x19, 0xb1, 0x8c, 0xf5, 0x8e, 0x63, 0xfe, 0x45, 0xa5, 0xba,
	0x97, 0x2b, 0xf2, 0x3f, 0x70, 0xc2, 0x66, 0xbc, 0x03, 0x78, 0x0a, 0xf0, 0xc4, 0x3e, 0x3e, 0xa9,
	0x54, 0x11, 0x5b, 0x90, 0xb6, 0x19, 0xef, 0x11, 0x1c, 0x42, 0xdf, 0xca, 0x8f, 0x1b, 0x25, 0xb6,
	0x66, 0x09, 0xe2, 0x19, 0xab, 0xc2, 0xb5, 0x5b, 0x24, 0xc7, 0x5c, 0x4a, 0xeb, 0x82, 0x75, 0xcb,
	0x1c, 0x87, 0xe0, 0x45, 0xf9, 0x76, 0xa2, 0x4f, 0x2e, 0x49, 0x27, 0x68, 0x84, 0x9d, 0x4b, 0x7f,
	0x64, 0x3e, 0xc4, 0xc8, 0xc0, 0x78, 0x37, 0xc6, 0x0b, 0x80, 0x19, 0x4d, 0xd3, 0x42, 0xf6, 0x6b,
	0xe4, 0xbd, 0x39, 0xde, 0x42, 0x3f, 0xca, 0xb7, 0xf6, 0xa0, 0x7a, 0x39, 0x46, 0x25, 0x39, 0xa8,
	0xc9, 0x54, 0x2c, 0xbc, 0x83, 0x43, 0xdd, 0xf3, 0x37, 0xda, 0xad, 0x89, 0x56, 0x35, 0xbc, 0x81,
	0xde, 0x4c, 0xf1, 0xcc, 0x5c, 0xa3, 0x58, 0xb4, 0x57, 0x93, 0x2c, 0x4b, 0x78, 0x0d, 0x5d, 0x8d,
	0xf4, 0x61, 0x8a, 0x58, 0xbf, 0x26, 0x56, 0x72, 0xde, 0x5b, 0xe6, 0x2f, 0xbd, 0xfa, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x91, 0x05, 0xbd, 0x95, 0xc9, 0x02, 0x00, 0x00,
}
